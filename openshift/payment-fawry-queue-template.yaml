apiVersion: v1
kind: Template
metadata:
  name: payment-template
  annotations:
    description: This template defines objects that are required to spin up a TLS Connect application
parameters:
  - name: APPLICATION_NAME
    description: Name of the application
    required: true
    displayName: Application Name
  - name: POSTGRES_SECRET_NAME
    required: true
  - name: POSTGRES_ADMIN_SECRET_NAME
    required: true
  - name: POSTGRES_DB_HOST
    required: true
  - name: POSTGRES_PAYMENT_DB_DATABASE
    required: true
  - name: TLSCONTACT_API
    required: true
  - name: CLIENT
    required: true
  - name: DIRECTUS_DOMAIN
    required: true
  - name: AWS_ACCOUNT_S3
    required: true
  - name: KBANK_THBKK2BE_SANDBOX_API_KEY
    required: true
  - name: KBANK_THBKK2BE_SANDBOX_SECRET
    required: true
  - name: KBANK_THBKK2BE_SANDBOX_MID
    required: true
  - name: KBANK_THBKK2BE_API_KEY
    required: true
  - name: KBANK_THBKK2BE_SECRET
    required: true
  - name: KBANK_THBKK2BE_MID
    required: true
  - name: ENVPAY_CMI_BEmaAll2be_SANDBOX_MERCHANT_ID
    required: true
  - name: ENVPAY_CMI_BEmaAll2be_SANDBOX_STOREKEY
    required: true
  - name: ENVPAY_CMI_BEmaAll2be_MERCHANT_ID
    required: true
  - name: ENVPAY_CMI_BEmaAll2be_STOREKEY
    required: true
  - name: ENVPAY_TINGG_COMMON_SANDBOX_ACCOUNT_NUMBER
    required: true
  - name: ENVPAY_TINGG_COMMON_SANDBOX_SERVICE_CODE
    required: true
  - name: ENVPAY_TINGG_COMMON_SANDBOX_IVKEY
    required: true
  - name: ENVPAY_TINGG_COMMON_SANDBOX_SECRET_KEY
    required: true
  - name: ENVPAY_TINGG_COMMON_SANDBOX_ACCESS_KEY
    required: true
  - name: ENVPAY_TINGG_COMMON_SANDBOX_CLIENT_ID
    required: true
  - name: ENVPAY_TINGG_COMMON_SANDBOX_CLIENT_SECRET
    required: true
  - name: ENVPAY_TINGG_COMMON_SANDBOX_OAUTH_HOST
    required: true
  - name: ENVPAY_TINGG_COMMON_SANDBOX_QUERY_STATUS_HOST
    required: true
  - name: ENVPAY_TINGG_COMMON_ACCOUNT_NUMBER
    required: true
  - name: ENVPAY_TINGG_COMMON_SERVICE_CODE
    required: true
  - name: ENVPAY_TINGG_COMMON_IVKEY
    required: true
  - name: ENVPAY_TINGG_COMMON_SECRET_KEY
    required: true
  - name: ENVPAY_TINGG_COMMON_ACCESS_KEY
    required: true
  - name: ENVPAY_TINGG_COMMON_CLIENT_ID
    required: true
  - name: ENVPAY_TINGG_COMMON_CLIENT_SECRET
    required: true
  - name: ENVPAY_TINGG_COMMON_OAUTH_HOST
    required: true
  - name: ENVPAY_TINGG_COMMON_QUERY_STATUS_HOST
    required: true
  - name: PAYGATE_ZAALL2BE_ENCRYPTION_SANDBOX_KEY
    required: true
  - name: PAYGATE_ZAALL2BE_SANDBOX_ID
    required: true
  - name: PAYGATE_ZAALL2BE_ENCRYPTION_KEY
    required: true
  - name: PAYGATE_ZAALL2BE_ID
    required: true
  - name: PAYGATE_ZAALL2BE_SELLER_EMAIL
    required: true
  - name: FAW_COMMON_SANDBOX_MERCHANT_ID
    required: true
  - name: FAW_COMMON_SANDBOX_SECRET_KEY
    required: true
  - name: FAW_egAll2be_MERCHANT_ID
    required: true
  - name: FAW_egAll2be_SECURITY_KEY
    required: true
  - name: ENVPAY_GLO_COMMON_SANDBOX_MERCHANT_ID
    required: true
  - name: ENVPAY_GLO_COMMON_SANDBOX_SECRET
    required: true
  - name: ENVPAY_GLO_BEgbALL2be_ACCOUNT
    required: true
  - name: ENVPAY_GLO_COMMON_MERCHANT_ID
    required: true
  - name: ENVPAY_GLO_COMMON_SECRET
    required: true
  - name: ENVPAY_PAY_COMMON_SANDBOX_ACCOUNT
    required: true
  - name: PAYU_NGALL2BE_SANDBOX_APP_ID
    required: true
  - name: PAYU_NGALL2BE_SANDBOX_PRIVATE_KEY
    required: true
  - name: PAYU_KEALL2BE_SANDBOX_APP_ID
    required: true
  - name: PAYU_KEALL2BE_SANDBOX_PRIVATE_KEY
    required: true
  - name: PAYU_NGALL2BE_APP_ID
    required: true
  - name: PAYU_NGALL2BE_PRIVATE_KEY
    required: true
  - name: PAYU_KEALL2BE_APP_ID
    required: true
  - name: PAYU_KEALL2BE_PRIVATE_KEY
    required: true
  - name: CLICTOPAY_SANDBOX_USER_NAME
    required: true
  - name: CLICTOPAY_SANDBOX_PASSWORD
    required: true
  - name: BANK_PAYMENT_SECRET
    required: true
  - name: PAYMENT_SERVICE_DOMAIN
    required: true
  - name: SANDBOX_PAYFORT_MERCHANT_ID
    required: true
  - name: SANDBOX_PAYFORT_ACCESS_CODE
    required: true
  - name: SANDBOX_PAYFORT_REQUEST_PHRASE
    required: true
  - name: SANDBOX_PAYFORT_RESPONSE_PHRASE
    required: true
  - name: PAYFORT_MERCHANT_ID
    required: true
  - name: PAYFORT_ACCESS_CODE
    required: true
  - name: PAYFORT_REQUEST_PHRASE
    required: true
  - name: PAYFORT_RESPONSE_PHRASE
    required: true
  - name: APPLICATION_ENV
    value: prod
    required: true
  - name: APP_ENV
    required: true
  - name: PROJECT
    required: true
  - name: OPENSHIFT_ENV
    required: true
  - name: NAMESPACE
    required: true
  - name: ROUTE_IP_WHITE_LIST
    required: true
  - name: IMAGE_TAG
    value: latest
  - name: VERIFYPEER
    required: true
    value: "/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt"
  - name: DEBUG_MODE
    value: "false"
    required: true
  - description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 5Gi
  - name: MEMORY_REQUEST
    description: Memory initially requested by the app container
    displayName: App container requested memory
    required: true
  - name: MEMORY_LIMIT
    description: Maximum memory allocated to the app container
    displayName: App container maximum memory
    required: true
  - displayName: Custom https Route Hostname
    description: 'Custom hostname for https service route. Leave blank for default hostname,
      e.g.: <application-name>.<project>.<default-domain-suffix>'
    name: HOSTNAME_HTTPS
    value: ''
    required: false
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${APPLICATION_NAME}-callback-queue
      name: ${APPLICATION_NAME}-callback-queue
    spec:
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - ${APPLICATION_NAME}
              - ${APPLICATION_NAME}-init
            from:
              kind: ImageStreamTag
              name: "${APPLICATION_NAME}:${IMAGE_TAG}"
          type: ImageChange
        - type: ConfigChange
      replicas: 1
      template:
        metadata:
          labels:
            app: ${APPLICATION_NAME}-callback-queue
            deploymentconfig: ${APPLICATION_NAME}-callback-queue
        spec:
          containers:
            - command: [ "/bin/sh" ]
              args:
                - -c
                - cd /opt/app-root/src/; echo '{"autoload":{"psr-4":{"App\\":"app/"}}}' > composer.json; php artisan queue:work tlscontact_fawry_payment_queue --tries=3 --timeout=60
            - env:
                - name: POSTGRES_DB_HOST
                  value: ${POSTGRES_DB_HOST}
                - name: TLSCONTACT_API
                  value: ${TLSCONTACT_API}
                - name: CLIENT
                  value: ${CLIENT}
                - name: DIRECTUS_DOMAIN
                  value: ${DIRECTUS_DOMAIN}
                - name: VERIFYPEER
                  value: ${VERIFYPEER}
                - name: POSTGRES_DEPLOY_DB_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: ${POSTGRES_ADMIN_SECRET_NAME}
                      key: username
                - name: POSTGRES_DEPLOY_DB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${POSTGRES_ADMIN_SECRET_NAME}
                      key: password
                - name: POSTGRES_DB_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: ${POSTGRES_SECRET_NAME}
                      key: username
                - name: POSTGRES_DB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${POSTGRES_SECRET_NAME}
                      key: password
                - name: POSTGRES_PAYMENT_DB_DATABASE
                  value: ${POSTGRES_PAYMENT_DB_DATABASE}
                - name: KEYCLOAK_BASE_URL
                  value: ${KEYCLOAK_BASE_URL}
                - name: KEYCLOAK_REALM
                  value: ${KEYCLOAK_REALM}
                - name: KEYCLOAK_CLIENT_ID
                  value: ${KEYCLOAK_CLIENT_ID}
                - name: KBANK_THBKK2BE_SANDBOX_API_KEY
                  value: ${KBANK_THBKK2BE_SANDBOX_API_KEY}
                - name: KBANK_THBKK2BE_SANDBOX_SECRET
                  value: ${KBANK_THBKK2BE_SANDBOX_SECRET}
                - name: KBANK_THBKK2BE_SANDBOX_MID
                  value: ${KBANK_THBKK2BE_SANDBOX_MID}
                - name: KBANK_THBKK2BE_API_KEY
                  value: ${KBANK_THBKK2BE_API_KEY}
                - name: KBANK_THBKK2BE_SECRET
                  value: ${KBANK_THBKK2BE_SECRET}
                - name: KBANK_THBKK2BE_MID
                  value: ${KBANK_THBKK2BE_MID}
                - name: ENVPAY_CMI_BEmaAll2be_SANDBOX_MERCHANT_ID
                  value: ${ENVPAY_CMI_BEmaAll2be_SANDBOX_MERCHANT_ID}
                - name: ENVPAY_CMI_BEmaAll2be_SANDBOX_STOREKEY
                  value: ${ENVPAY_CMI_BEmaAll2be_SANDBOX_STOREKEY}
                - name: ENVPAY_CMI_BEmaAll2be_MERCHANT_ID
                  value: ${ENVPAY_CMI_BEmaAll2be_MERCHANT_ID}
                - name: ENVPAY_CMI_BEmaAll2be_STOREKEY
                  value: ${ENVPAY_CMI_BEmaAll2be_STOREKEY}
                - name: ENVPAY_TINGG_COMMON_SANDBOX_ACCOUNT_NUMBER
                  value: ${ENVPAY_TINGG_COMMON_SANDBOX_ACCOUNT_NUMBER}
                - name: ENVPAY_TINGG_COMMON_SANDBOX_SERVICE_CODE
                  value: ${ENVPAY_TINGG_COMMON_SANDBOX_SERVICE_CODE}
                - name: ENVPAY_TINGG_COMMON_SANDBOX_IVKEY
                  value: ${ENVPAY_TINGG_COMMON_SANDBOX_IVKEY}
                - name: ENVPAY_TINGG_COMMON_SANDBOX_SECRET_KEY
                  value: ${ENVPAY_TINGG_COMMON_SANDBOX_SECRET_KEY}
                - name: ENVPAY_TINGG_COMMON_SANDBOX_ACCESS_KEY
                  value: ${ENVPAY_TINGG_COMMON_SANDBOX_ACCESS_KEY}
                - name: ENVPAY_TINGG_COMMON_SANDBOX_CLIENT_ID
                  value: ${ENVPAY_TINGG_COMMON_SANDBOX_CLIENT_ID}
                - name: ENVPAY_TINGG_COMMON_SANDBOX_CLIENT_SECRET
                  value: ${ENVPAY_TINGG_COMMON_SANDBOX_CLIENT_SECRET}
                - name: ENVPAY_TINGG_COMMON_SANDBOX_OAUTH_HOST
                  value: ${ENVPAY_TINGG_COMMON_SANDBOX_OAUTH_HOST}
                - name: ENVPAY_TINGG_COMMON_SANDBOX_QUERY_STATUS_HOST
                  value: ${ENVPAY_TINGG_COMMON_SANDBOX_QUERY_STATUS_HOST}
                - name: ENVPAY_TINGG_COMMON_ACCOUNT_NUMBER
                  value: ${ENVPAY_TINGG_COMMON_ACCOUNT_NUMBER}
                - name: ENVPAY_TINGG_COMMON_SERVICE_CODE
                  value: ${ENVPAY_TINGG_COMMON_SERVICE_CODE}
                - name: ENVPAY_TINGG_COMMON_IVKEY
                  value: ${ENVPAY_TINGG_COMMON_IVKEY}
                - name: ENVPAY_TINGG_COMMON_SECRET_KEY
                  value: ${ENVPAY_TINGG_COMMON_SECRET_KEY}
                - name: ENVPAY_TINGG_COMMON_ACCESS_KEY
                  value: ${ENVPAY_TINGG_COMMON_ACCESS_KEY}
                - name: ENVPAY_TINGG_COMMON_CLIENT_ID
                  value: ${ENVPAY_TINGG_COMMON_CLIENT_ID}
                - name: ENVPAY_TINGG_COMMON_CLIENT_SECRET
                  value: ${ENVPAY_TINGG_COMMON_CLIENT_SECRET}
                - name: ENVPAY_TINGG_COMMON_OAUTH_HOST
                  value: ${ENVPAY_TINGG_COMMON_OAUTH_HOST}
                - name: ENVPAY_TINGG_COMMON_QUERY_STATUS_HOST
                  value: ${ENVPAY_TINGG_COMMON_QUERY_STATUS_HOST}
                - name: PAYGATE_ZAALL2BE_ENCRYPTION_SANDBOX_KEY
                  value: ${PAYGATE_ZAALL2BE_ENCRYPTION_SANDBOX_KEY}
                - name: PAYGATE_ZAALL2BE_SANDBOX_ID
                  value: ${PAYGATE_ZAALL2BE_SANDBOX_ID}
                - name: PAYGATE_ZAALL2BE_ENCRYPTION_KEY
                  value: ${PAYGATE_ZAALL2BE_ENCRYPTION_KEY}
                - name: PAYGATE_ZAALL2BE_ID
                  value: ${PAYGATE_ZAALL2BE_ID}
                - name: PAYGATE_ZAALL2BE_SELLER_EMAIL
                  value: ${PAYGATE_ZAALL2BE_SELLER_EMAIL}
                - name: FAW_COMMON_SANDBOX_MERCHANT_ID
                  value: ${FAW_COMMON_SANDBOX_MERCHANT_ID}
                - name: FAW_COMMON_SANDBOX_SECRET_KEY
                  value: ${FAW_COMMON_SANDBOX_SECRET_KEY}
                - name: FAW_egAll2be_MERCHANT_ID
                  value: ${FAW_egAll2be_MERCHANT_ID}
                - name: FAW_egAll2be_SECURITY_KEY
                  value: ${FAW_egAll2be_SECURITY_KEY}
                - name: ENVPAY_GLO_COMMON_SANDBOX_MERCHANT_ID
                  value: ${ENVPAY_GLO_COMMON_SANDBOX_MERCHANT_ID}
                - name: ENVPAY_GLO_COMMON_SANDBOX_SECRET
                  value: ${ENVPAY_GLO_COMMON_SANDBOX_SECRET}
                - name: ENVPAY_GLO_BEgbALL2be_ACCOUNT
                  value: ${ENVPAY_GLO_BEgbALL2be_ACCOUNT}
                - name: ENVPAY_GLO_COMMON_MERCHANT_ID
                  value: ${ENVPAY_GLO_COMMON_MERCHANT_ID}
                - name: ENVPAY_GLO_COMMON_SECRET
                  value: ${ENVPAY_GLO_COMMON_SECRET}
                - name: ENVPAY_PAY_COMMON_SANDBOX_ACCOUNT
                  value: ${ENVPAY_PAY_COMMON_SANDBOX_ACCOUNT}
                - name: PAYU_NGALL2BE_SANDBOX_APP_ID
                  value: ${PAYU_NGALL2BE_SANDBOX_APP_ID}
                - name: PAYU_NGALL2BE_SANDBOX_PRIVATE_KEY
                  value: ${PAYU_NGALL2BE_SANDBOX_PRIVATE_KEY}
                - name: PAYU_KEALL2BE_SANDBOX_APP_ID
                  value: ${PAYU_KEALL2BE_SANDBOX_APP_ID}
                - name: PAYU_KEALL2BE_SANDBOX_PRIVATE_KEY
                  value: ${PAYU_KEALL2BE_SANDBOX_PRIVATE_KEY}
                - name: PAYU_NGALL2BE_APP_ID
                  value: ${PAYU_NGALL2BE_APP_ID}
                - name: PAYU_NGALL2BE_PRIVATE_KEY
                  value: ${PAYU_NGALL2BE_PRIVATE_KEY}
                - name: PAYU_KEALL2BE_APP_ID
                  value: ${PAYU_KEALL2BE_APP_ID}
                - name: PAYU_KEALL2BE_PRIVATE_KEY
                  value: ${PAYU_KEALL2BE_PRIVATE_KEY}
                - name: CLICTOPAY_SANDBOX_USER_NAME
                  value: ${CLICTOPAY_SANDBOX_USER_NAME}
                - name: CLICTOPAY_SANDBOX_PASSWORD
                  value: ${CLICTOPAY_SANDBOX_PASSWORD}
                - name: BANK_PAYMENT_SECRET
                  value: ${BANK_PAYMENT_SECRET}
                - name: SANDBOX_PAYFORT_MERCHANT_ID
                  value: ${SANDBOX_PAYFORT_MERCHANT_ID}
                - name: SANDBOX_PAYFORT_ACCESS_CODE
                  value: ${SANDBOX_PAYFORT_ACCESS_CODE}
                - name: SANDBOX_PAYFORT_REQUEST_PHRASE
                  value: ${SANDBOX_PAYFORT_REQUEST_PHRASE}
                - name: SANDBOX_PAYFORT_RESPONSE_PHRASE
                  value: ${SANDBOX_PAYFORT_RESPONSE_PHRASE}
                - name: PAYFORT_MERCHANT_ID
                  value: ${PAYFORT_MERCHANT_ID}
                - name: PAYFORT_ACCESS_CODE
                  value: ${PAYFORT_ACCESS_CODE}
                - name: PAYFORT_REQUEST_PHRASE
                  value: ${PAYFORT_REQUEST_PHRASE}
                - name: PAYFORT_RESPONSE_PHRASE
                  value: ${PAYFORT_RESPONSE_PHRASE}
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${AWS_ACCOUNT_S3}
                      key: AWS_ACCESS_KEY_ID
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${AWS_ACCOUNT_S3}
                      key: AWS_SECRET_ACCESS_KEY
                - name: AWS_DEFAULT_REGION
                  valueFrom:
                    secretKeyRef:
                      name: ${AWS_ACCOUNT_S3}
                      key: AWS_REGION
                - name: AWS_BUCKET
                  valueFrom:
                    secretKeyRef:
                      name: ${AWS_ACCOUNT_S3}
                      key: AWS_BUCKET_NAME
              image: ' '
              imagePullPolicy: Always
              name: ${APPLICATION_NAME}
              resources:
                requests:
                  memory: ${MEMORY_REQUEST}
                limits:
                  memory: ${MEMORY_LIMIT}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /opt/app-root/src/log
                  name: volume-logs
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - emptyDir: {}
              name: volume-logs
  -
    apiVersion: v1
    kind: Service
    metadata:
      annotations:
        service.alpha.openshift.io/serving-cert-secret-name: ${APPLICATION_NAME}-x509-https-secret
      labels:
        app: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      selector:
        app: ${APPLICATION_NAME}
      ports:
        - name: https
          port: 8443
  -
    kind: Route
    apiVersion: v1
    id: "${APPLICATION_NAME}-https"
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: "${APPLICATION_NAME}"
      annotations:
        description: Route for ${APPLICATION_NAME}'s https service.
        kubernetes.io/tls-acme: 'true'
        haproxy.router.openshift.io/ip_whitelist: ${ROUTE_IP_WHITE_LIST}
        haproxy.router.openshift.io/timeout: "60s"
    spec:
      host: "${HOSTNAME_HTTPS}"
      to:
        name: ${APPLICATION_NAME}
      tls:
        termination: reencrypt
        insecureEdgeTerminationPolicy: Redirect
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-${APPLICATION_NAME}-router
    spec:
      ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                  - key: name
                    operator: In
                    values:
                      - default
                      - openshift-ingress
          ports:
            - port: 8443
              protocol: TCP
      podSelector:
        matchLabels:
          app: ${APPLICATION_NAME}
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-${APPLICATION_NAME}-pgbouncer
      labels:
        app: ${APPLICATION_NAME}
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app: ${APPLICATION_NAME}
          ports:
            - port: 5432
              protocol: TCP
      podSelector:
        matchLabels:
          crunchy-pgbouncer: 'true'
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-${APPLICATION_NAME}-pgcluster
      labels:
        app: ${APPLICATION_NAME}
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app: ${APPLICATION_NAME}
          ports:
            - port: 5432
              protocol: TCP
      podSelector:
        matchLabels:
          pgo-pg-database: 'true'
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-${APPLICATION_NAME}-service-api
      labels:
        app: ${APPLICATION_NAME}
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app: ${APPLICATION_NAME}
          ports:
            - port: 8443
              protocol: TCP
      podSelector:
        matchLabels:
          app: 'tlsconnect-service-api'
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-${APPLICATION_NAME}-customer-service
      labels:
        app: ${APPLICATION_NAME}
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app: ${APPLICATION_NAME}
          ports:
            - port: 8080
              protocol: TCP
      podSelector:
        matchLabels:
          app: customerservice
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-pgbouncer-rds-tlspay-api
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app: "${APPLICATION_NAME}"
          ports:
            - port: 5432
              protocol: TCP
      podSelector:
        matchLabels:
          app: pgbouncer

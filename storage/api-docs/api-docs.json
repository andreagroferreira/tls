{
    "openapi": "3.0.0",
    "info": {
        "title": "Payment Service API",
        "description": "API for Payment service project",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/avs_recommendation/{f_id}": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "get the services by directus recommendation priority",
                "operationId": "4ea8d86a3e10336d0864f91c8e33e978",
                "parameters": [
                    {
                        "name": "f_id",
                        "in": "path",
                        "description": "the tlsconnect f_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10001"
                        }
                    },
                    {
                        "name": "step",
                        "in": "query",
                        "description": "the counter location of agent, only accept Welcome, Doc or Bio",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Welcome"
                        }
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "the data source of recommend avs, only accept directus or rule_engine, default for directus",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "rule_engine"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "number of recommended services, default for 6",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "6"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get the recommended service success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/checkout/{t_id}": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "get the transaction details according to fg_id",
                "operationId": "8b1dc1b961c8233f601507a00ccf3c55",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "path",
                        "description": "the transaction id, t_id in transaction table",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get the transaction information",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    },
                    "404": {
                        "description": "transaction not found"
                    }
                }
            }
        },
        "/api/v1/clictopay/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from clictopay",
                "operationId": "23b9be415226142321151a289e6da579",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/clictopay/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from clictopay",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/cmi/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "redirect request from CMI",
                "operationId": "ccffb34cf3817a4e56b7e352f8a0b7c0",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/cmi/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from CMI",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/cmi/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "background callback from CMI",
                "operationId": "647885e5d4398049f877c09185311bad",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/fawry/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "background callback from fawry",
                "operationId": "644767f4e55d3aa543a44323bbcceb8a",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/fawry/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "background callback from fawry",
                "operationId": "50de3d3a2e92172b25918c657b041a09",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/fawry/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from fawry",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/globaliris/redirto": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from globaliris",
                "operationId": "d0cde0d0284d1c11fa5ac18f0e8b2f28",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/globaliris/return": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from globaliris",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/globaliris/redirect": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from globaliris",
                "operationId": "ee5a4f7b46857db42e90f84270e90499",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/invoice/{transaction_id}": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "download the invoice file according to transaction_id",
                "operationId": "40b28a98c72f1fc2992730f13ac506e3",
                "parameters": [
                    {
                        "name": "transaction_id",
                        "in": "path",
                        "description": "the transaction_id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "DEVELOPMENT20210414-dzALG2be-0000000055"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return invoice pdf",
                        "content": {
                            "application/pdf": {}
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/api/v1/k-bank/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from k-bank",
                "operationId": "87278bb290183479cd329eca7388036d",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "tokn_test_2088099ffb71c1a4a3441419cd20fec81d7e7"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/k-bank/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from k-bank",
                "operationId": "4ce4bb5218a791845405df6ca96c3068",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/k-bank/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from k-bank",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/k-bank/config": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return config for k-bank",
                "operationId": "cd8ad5f8c5504d68dc4596e15a9ba7b0",
                "parameters": [
                    {
                        "name": "client",
                        "in": "query",
                        "description": "define which client you want to create the acccount in",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "example": "be"
                        }
                    },
                    {
                        "name": "issuer",
                        "in": "query",
                        "description": "the issuer in database",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "example": "thBKK2be"
                        }
                    },
                    {
                        "name": "payment",
                        "in": "query",
                        "description": "the payment name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "example": "k-bank"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/pay_bank/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "operationId": "e8be94033150decf4fa1179570b9b317",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/pay_bank/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/pay_bank/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "operationId": "65b042a91ed7fd82365948dd7c7ecc81",
                "parameters": [
                    {
                        "name": "transaction",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "3-digit currency code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "RMB"
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "the amount of bank payment paid",
                        "required": true,
                        "schema": {
                            "type": "float",
                            "example": "10.00"
                        }
                    },
                    {
                        "name": "agent_name",
                        "in": "query",
                        "description": "the amount of bank payment paid",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "test"
                        }
                    },
                    {
                        "name": "force_pay_for_not_online_payment_avs",
                        "in": "query",
                        "description": "agent avs paid flag",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "yes"
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "the amount of bank payment paid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "afdba9a05eb64b07103a340a6e20d7e5d22b2e1dc9b27dc0783f99e8114d154b"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction confirmed",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/pay_later/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "operationId": "a715fb88fe71db5a726781a4737f7f15",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/pay_later/return": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/paypal/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "operationId": "e6dcda7c64cec917374823f78b365525",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/paypal/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "operationId": "3e487ffc6f68022a836ad82df8b59213",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/paypal/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/paypal/wait": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "get the payment status",
                "operationId": "e3bf2db53097101aa4a13c074c9ccd11",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/payfort/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return transaction parameters for payfort",
                "operationId": "56189a388df45d2009d5af187591a2a2",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/payfort/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from payfort",
                "responses": {
                    "200": {
                        "description": "transaction success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/payfort/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return message to payment gateway",
                "operationId": "08fcaa3e12a4537fc132cba895d14de4",
                "responses": {
                    "200": {
                        "description": "transaction success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/paygate/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from globaliris",
                "operationId": "dde8e8134c2106b97b35144570c09ce1",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/paygate/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "operationId": "975d55e742b99b8b46aec1678d19d3f7",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/paygate/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/payu/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from payu",
                "operationId": "9ffaeb88f6edb90ef6353ab8f58ee948",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/payu/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from payu",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/rcd_result": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "add a recommendation result",
                "operationId": "b56c8f28f6aae38e3fd2b625da80f3df",
                "parameters": [
                    {
                        "name": "f_id",
                        "in": "query",
                        "description": "the tlsconnect f_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "agent",
                        "in": "query",
                        "description": "the agent who operate this record",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "test.test"
                        }
                    },
                    {
                        "name": "sku",
                        "in": "query",
                        "description": "the sku accepted or denied",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "COURIER"
                        }
                    },
                    {
                        "name": "result",
                        "in": "query",
                        "description": "the recommendation result, accept or deny",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "accept"
                        }
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "the recommendation result comment",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "I do not need"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create a recommendation result record success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/rcd_result/{f_id}": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "get the recommendation result according to f_id",
                "operationId": "35a08b0716b6192144edfadbc2b90937",
                "parameters": [
                    {
                        "name": "f_id",
                        "in": "path",
                        "description": "the tlsconnect f_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get the recommendation result list",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/rcd_result/{rcd_id}": {
            "delete": {
                "tags": [
                    "Payment API"
                ],
                "description": "delete the recommendation results according to rcd_id",
                "operationId": "f11e25101967a354e14903541a51ad4c",
                "parameters": [
                    {
                        "name": "rcd_id",
                        "in": "path",
                        "description": "the recommendation result id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "rr_deleted_by",
                        "in": "query",
                        "description": "the agent who delete this record",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "test.test"
                        }
                    },
                    {
                        "name": "is_soft_delete",
                        "in": "query",
                        "description": "soft delete this record or not, yes(for soft delte) or no",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "yes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleted the record",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/rcd_rule": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "get the recommendation services by rule engine",
                "operationId": "6f400200555896d2c06f800707f51e61",
                "parameters": [
                    {
                        "name": "issuer",
                        "in": "query",
                        "description": "issuer code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "esMAD2uk"
                        }
                    },
                    {
                        "name": "visa_type",
                        "in": "query",
                        "description": "applicant's visa type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "short_stay"
                        }
                    },
                    {
                        "name": "travel_purpose",
                        "in": "query",
                        "description": "applicant's travel purpose",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "business"
                        }
                    },
                    {
                        "name": "age",
                        "in": "query",
                        "description": "applicant's age",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "6"
                        }
                    },
                    {
                        "name": "nationality",
                        "in": "query",
                        "description": "applicant's nationality code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "cn"
                        }
                    },
                    {
                        "name": "account_type",
                        "in": "query",
                        "description": "applicant's account type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "INDI"
                        }
                    },
                    {
                        "name": "step",
                        "in": "query",
                        "description": "the tlsconnect f_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10001"
                        }
                    },
                    {
                        "name": "visa_sub_type",
                        "in": "query",
                        "description": "applicant's sub visa type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "ext"
                        }
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "description": "number of recommended services",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "6"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return the recommended services",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/tingg/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "operationId": "cf90f9c0cf5824b5d0d505c45217da9d",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/tingg/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/tingg/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "operationId": "e264337105fc6b26f4a5ae16dae9ff7c",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/transaction/{fg_id}": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "get the transaction details according to fg_id",
                "operationId": "d218fd8352206dbbbd39b0a778558d30",
                "parameters": [
                    {
                        "name": "fg_id",
                        "in": "path",
                        "description": "the tlsconnect fg_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "desc or asc",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get the transaction information",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    },
                    "404": {
                        "description": "transaction not found"
                    }
                }
            }
        },
        "/api/v1/transaction": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "create a new transaction",
                "operationId": "1e5d79344831342dc54e615e9136c1b3",
                "parameters": [
                    {
                        "name": "fg_id",
                        "in": "query",
                        "description": "tlsconnect fg_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    },
                    {
                        "name": "client",
                        "in": "query",
                        "description": "the client id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "be"
                        }
                    },
                    {
                        "name": "issuer",
                        "in": "query",
                        "description": "the issuer tab",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "dzALG2be"
                        }
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "the payment currency for this transaction",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "MAD"
                        }
                    },
                    {
                        "name": "redirect_url",
                        "in": "query",
                        "description": "the tlsconnect website redirection url",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "onSuccess_tlsweb_url?lang=fr-fr"
                        }
                    },
                    {
                        "name": "onerror_url",
                        "in": "query",
                        "description": "the tlsconnect website error url",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "onError_tlsweb_url?lang=fr-fr"
                        }
                    },
                    {
                        "name": "reminder_url",
                        "in": "query",
                        "description": "the tlsconnect website reminder url",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "callback_to_send_reminder?lang=fr-fr"
                        }
                    },
                    {
                        "name": "callback_url",
                        "in": "query",
                        "description": "the tlsconnect website callback url",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "receipt_url/{fg_id}?lang=fr-fr"
                        }
                    },
                    {
                        "name": "workflow",
                        "in": "query",
                        "description": "workflow",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "postal"
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "transaction items. ",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/transactions": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "get all transactions",
                "operationId": "d19fe52c210336d1a4f815d46ab9cc82",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page, default 1",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "number of result per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "20"
                        }
                    },
                    {
                        "name": "issuer",
                        "in": "query",
                        "description": "define which issuer you want to fetch",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "egCAI2be,egCAI2be"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start date",
                        "required": false,
                        "schema": {
                            "type": "date",
                            "example": "2021-01-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end date",
                        "required": false,
                        "schema": {
                            "type": "date",
                            "example": "2021-12-31"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "transaction stats, eg pending, waiting, close, done",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "pending"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get the transaction",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        }
    }
}
{
    "openapi": "3.0.0",
    "info": {
        "title": "Payment Service API",
        "description": "API for Payment service project",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/alipay/redirto": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from globaliris",
                "operationId": "c05972107811113ab1f6100a5ecaeb54",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/alipay/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "operationId": "c12e7074832b0aa346f059b097d7a3b9",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/alipay/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paysoft",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/avs_recommendation/{f_id}": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "get the services by directus recommendation priority",
                "operationId": "4ea8d86a3e10336d0864f91c8e33e978",
                "parameters": [
                    {
                        "name": "f_id",
                        "in": "path",
                        "description": "the tlsconnect f_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10001"
                        }
                    },
                    {
                        "name": "step",
                        "in": "query",
                        "description": "the counter location of agent, only accept Welcome, Doc or Bio",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Welcome"
                        }
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "the data source of recommend avs, only accept directus or rule_engine, default for directus",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "rule_engine"
                        }
                    },
                    {
                        "name": "refresh_cache",
                        "in": "query",
                        "description": "refresh cache",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "false"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get the recommended service success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/binga/redirto": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from globaliris",
                "operationId": "b3788568660bcc161eec8a2495dc82a0",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/binga/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "operationId": "a519f7258d13cf411fb343d5ea7460f1",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/binga/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paysoft",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/bnp/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from bnp",
                "operationId": "4e1a73bdcf856f41abfc0a47c8372fc4",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/bnp/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from bnp",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/bnp/receipt": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return receipt",
                "operationId": "87556ae131cf994a88859b8f933d4d0e",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "query",
                        "description": "the transaction_id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "DEVELOPMENT20210414-dzALG2be-0000000055"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "action",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "show/download/send"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "If action is send, you need to fill in email",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "a@a.com"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "receipt content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/checkout/{t_id}": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "get the transaction details according to fg_id",
                "operationId": "8b1dc1b961c8233f601507a00ccf3c55",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "path",
                        "description": "the transaction id, t_id in transaction table",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get the transaction information",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    },
                    "404": {
                        "description": "transaction not found"
                    }
                }
            }
        },
        "/api/v1/clictopay/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from clictopay",
                "operationId": "23b9be415226142321151a289e6da579",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/clictopay/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from clictopay",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/cmi/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "redirect request from CMI",
                "operationId": "ccffb34cf3817a4e56b7e352f8a0b7c0",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/cmi/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from CMI",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/cmi/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "background callback from CMI",
                "operationId": "647885e5d4398049f877c09185311bad",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/cybersource/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from Cybersource",
                "operationId": "0df7e2cbb4086bf068e3400dc6c0264a",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/cybersource/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from Cybersource",
                "operationId": "b012762af83e7fbe52ac76421cb347a2",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/cybersource/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from Cybersource",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/fawry/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "background callback from fawry",
                "operationId": "644767f4e55d3aa543a44323bbcceb8a",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/fawry/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "background callback from fawry",
                "operationId": "50de3d3a2e92172b25918c657b041a09",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/fawry/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from fawry",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/form_group/{fg_id}": {
            "get": {
                "tags": [
                    "TLS API"
                ],
                "description": "Get form group data",
                "operationId": "86f78b0869d0da4325d655b934771ba7",
                "parameters": [
                    {
                        "name": "fg_id",
                        "in": "path",
                        "description": "the form group id in database",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "client",
                        "in": "query",
                        "description": "define which client you want to create the acccount in",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "be"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get the form group information",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request, form group not found"
                    }
                }
            }
        },
        "/api/v1/globaliris/redirto": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from globaliris",
                "operationId": "d0cde0d0284d1c11fa5ac18f0e8b2f28",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/globaliris/return": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from globaliris",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/globaliris/redirect": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from globaliris",
                "operationId": "ee5a4f7b46857db42e90f84270e90499",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/invoice/{transaction_id}": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "download the invoice file according to transaction_id",
                "operationId": "40b28a98c72f1fc2992730f13ac506e3",
                "parameters": [
                    {
                        "name": "transaction_id",
                        "in": "path",
                        "description": "the transaction_id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "DEVELOPMENT20210414-dzALG2be-0000000055"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return invoice pdf",
                        "content": {
                            "application/pdf": {}
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/api/v1/k-bank/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from k-bank",
                "operationId": "87278bb290183479cd329eca7388036d",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "tokn_test_2088099ffb71c1a4a3441419cd20fec81d7e7"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/k-bank/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from k-bank",
                "operationId": "4ce4bb5218a791845405df6ca96c3068",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/k-bank/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from k-bank",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/k-bank/config": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return config for k-bank",
                "operationId": "cd8ad5f8c5504d68dc4596e15a9ba7b0",
                "parameters": [
                    {
                        "name": "client",
                        "in": "query",
                        "description": "define which client you want to create the acccount in",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "example": "be"
                        }
                    },
                    {
                        "name": "issuer",
                        "in": "query",
                        "description": "the issuer in database",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "example": "thBKK2be"
                        }
                    },
                    {
                        "name": "payment",
                        "in": "query",
                        "description": "the payment name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "example": "k-bank"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/pay_bank/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "operationId": "e8be94033150decf4fa1179570b9b317",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/pay_bank/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/pay_bank/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "operationId": "65b042a91ed7fd82365948dd7c7ecc81",
                "parameters": [
                    {
                        "name": "transaction",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "3-digit currency code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "RMB"
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "the amount of bank payment paid",
                        "required": true,
                        "schema": {
                            "type": "float",
                            "example": "10.00"
                        }
                    },
                    {
                        "name": "agent_name",
                        "in": "query",
                        "description": "the amount of bank payment paid",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "test"
                        }
                    },
                    {
                        "name": "force_pay_for_not_online_payment_avs",
                        "in": "query",
                        "description": "agent avs paid flag",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "yes"
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "the amount of bank payment paid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "afdba9a05eb64b07103a340a6e20d7e5d22b2e1dc9b27dc0783f99e8114d154b"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction confirmed",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/pay_later/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "operationId": "a715fb88fe71db5a726781a4737f7f15",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/pay_later/return": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/paypal/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "operationId": "e6dcda7c64cec917374823f78b365525",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/paypal/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "operationId": "3e487ffc6f68022a836ad82df8b59213",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/paypal/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/paypal/wait": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "get the payment status",
                "operationId": "e3bf2db53097101aa4a13c074c9ccd11",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/payfort/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return transaction parameters for payfort",
                "operationId": "56189a388df45d2009d5af187591a2a2",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/payfort/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from payfort",
                "responses": {
                    "200": {
                        "description": "transaction success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/payfort/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return message to payment gateway",
                "operationId": "08fcaa3e12a4537fc132cba895d14de4",
                "responses": {
                    "200": {
                        "description": "transaction success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/paygate/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from globaliris",
                "operationId": "dde8e8134c2106b97b35144570c09ce1",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/paygate/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "operationId": "975d55e742b99b8b46aec1678d19d3f7",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/paygate/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/payment-gateway-field-list": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "Get field details for all payment accounts.",
                "operationId": "45c70dacf7d2aa210a543f5ba2934f6d",
                "responses": {
                    "200": {
                        "description": "get the payment_accounts information",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    },
                    "404": {
                        "description": "payment_accounts not found"
                    }
                }
            }
        },
        "/api/v1/payment-account/{pa_id}": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "get the payment_accounts details according to pa_id",
                "operationId": "bf05cb389e0defec96b7e4747d9b5792",
                "parameters": [
                    {
                        "name": "pa_id",
                        "in": "path",
                        "description": "the payment_accounts pa_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get the payment_accounts information",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    },
                    "404": {
                        "description": "payment_accounts not found"
                    }
                }
            }
        },
        "/api/v1/payment-account": {
            "put": {
                "tags": [
                    "Payment API"
                ],
                "description": "update a payment_accounts",
                "operationId": "1d50a84183435a6d0ac79a3a9291d8f6",
                "parameters": [
                    {
                        "name": "psp_id",
                        "in": "query",
                        "description": "payment_accounts pa_xref_psp_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    },
                    {
                        "name": "pa_name",
                        "in": "query",
                        "description": "payment_accounts pa_name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "cmi"
                        }
                    },
                    {
                        "name": "pa_type",
                        "in": "query",
                        "description": "payment_accounts pa_type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "[sandbox, prod]"
                        }
                    },
                    {
                        "name": "pa_info",
                        "in": "query",
                        "description": "payment_accounts pa_info.",
                        "required": true,
                        "schema": {
                            "type": "json",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "payment_accounts update success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "add exists payment account",
                "operationId": "632c1fd8cfb6135ed76757ab1be46ece",
                "parameters": [
                    {
                        "name": "pa_xref_psp_id",
                        "in": "query",
                        "description": "payment_service_providers id",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": "2"
                        }
                    },
                    {
                        "name": "pa_name",
                        "in": "query",
                        "description": "payment_accounts name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "alipay cnBSJ2be prod"
                        }
                    },
                    {
                        "name": "pa_type",
                        "in": "query",
                        "description": "payment_type option",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "prod, sandbox"
                        }
                    },
                    {
                        "name": "pa_info",
                        "in": "query",
                        "description": "payment_accounts pa_info.",
                        "required": true,
                        "schema": {
                            "type": "json",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return upload success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/payment-service-providers": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "get the payment_service_providers details",
                "operationId": "c9cbb956343dc66f71b80b5a215d106b",
                "responses": {
                    "200": {
                        "description": "get the payment_service_providers  information",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    },
                    "404": {
                        "description": "payment_service_providers not found"
                    }
                }
            }
        },
        "/api/v1/payment-configurations-list": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "get a payment_configurations",
                "operationId": "ccbd970bdf8fc42bb6c9e0212e21e285",
                "parameters": [
                    {
                        "name": "client",
                        "in": "query",
                        "description": "define which client you want to fetch",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "de"
                        }
                    },
                    {
                        "name": "service_type",
                        "in": "query",
                        "description": "payment_configurations pc_service",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "tls"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "payment_configurations update success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/location-config": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "Get the issuer exists payment-config",
                "operationId": "abddb96e23194a1cd426ae5c052bd187",
                "parameters": [
                    {
                        "name": "pc_id",
                        "in": "query",
                        "description": "payment_configurations",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get the paymentgateway result list",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/payment-config": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "add exists payment config",
                "operationId": "b398b51f7e88b5a97506b7f2d4c0ac03",
                "parameters": [
                    {
                        "name": "pc_id",
                        "in": "query",
                        "description": "payment_configurations id",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": "123"
                        }
                    },
                    {
                        "name": "pa_id",
                        "in": "query",
                        "description": "payment_accounts id",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": "123"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return upload success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/payment-configurations": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "create a payment_configurations",
                "operationId": "374f58df9bdcdefc30683484766d4aea",
                "parameters": [
                    {
                        "name": "client",
                        "in": "query",
                        "description": "define which client you want to fetch",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "de"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "define which country you want to fetch",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "eg"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "define which city you want to fetch",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "CAI"
                        }
                    },
                    {
                        "name": "service",
                        "in": "query",
                        "description": "payment_configurations pc_service",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "tls"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "payment_configurations create success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/location-available-accounts": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "Get the paymentgateway list",
                "operationId": "b4d03e00386f990f575d09d9ebe7b279",
                "parameters": [
                    {
                        "name": "pc_id",
                        "in": "query",
                        "description": "payment_configurations",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get the paymentgateway result list",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/payment-configurations/{pc_id}": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "delete a payment_configuration",
                "operationId": "49ebe6dc80880315f433c56147648153",
                "parameters": [
                    {
                        "name": "pc_id",
                        "in": "path",
                        "description": "the payment_configurations pc_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "payment_configuration delete success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/paysoft/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paysoft",
                "operationId": "ef14dda6365391361cbb881b3ed34e9c",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/paysoft/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "operationId": "5c14a3b2a06fd4ca0572979408c26c2d",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/paysoft/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paysoft",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/payu/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from payu",
                "operationId": "9ffaeb88f6edb90ef6353ab8f58ee948",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/payu/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from payu",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/profile": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "description": "Upload profiles for applications. duplicated upload will be ignored",
                "operationId": "711b7a6a6c77be1a6c6f7bc34e729328",
                "parameters": [
                    {
                        "name": "profiles",
                        "in": "query",
                        "description": "csv file containing profiles for multiple applications",
                        "required": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "all the profile uploaded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/application-with-profile/{profile}": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "get all applicant ids with profile name",
                "operationId": "91646143db5d670100c4925cc9466a3e",
                "parameters": [
                    {
                        "name": "profile",
                        "in": "path",
                        "description": "the profile name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "UK-PL"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "all application ids for this profile",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "some error happens for ths API"
                    }
                }
            }
        },
        "/api/v1/application-profile/{f_id}": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "description": "Get profile for one application",
                "operationId": "11d6c698834f07a3a1d3178c1a4845e4",
                "parameters": [
                    {
                        "name": "f_id",
                        "in": "path",
                        "description": "application f_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "12345"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "profile found for this application",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "some error happens for ths API"
                    }
                }
            }
        },
        "/api/v1/application-profiles": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "description": "Get profile for multiple applications",
                "operationId": "c6548032bd74b6be082bddc209b4166c",
                "parameters": [
                    {
                        "name": "f_ids",
                        "in": "query",
                        "description": "applications f_id",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": "[10001, 10002]"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "profile found for this application",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "some error happens for ths API"
                    }
                }
            }
        },
        "/retry_failed_queue/{queue_name}": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "resend transaction",
                "operationId": "1897c09877bc5e40c1b8ebfe7e7aced9",
                "parameters": [
                    {
                        "name": "queue_name",
                        "in": "query",
                        "description": "queue name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "tlscontact_transaction_sync_queue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "added to transaction queue",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request, added to transaction queue failed"
                    }
                }
            }
        },
        "/health": {
            "get": {
                "tags": [
                    "Email Service"
                ],
                "description": "get jobs volume",
                "operationId": "36f000ac4ebe1afeef3c4b2c4cb743bf",
                "parameters": [
                    {
                        "name": "queue_name",
                        "in": "query",
                        "description": "queue name",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "tlscontact_transaction_sync_queue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return the volume count",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request, get volume failed"
                    }
                }
            }
        },
        "/api/v1/recommendation-config-upload": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "upload csv file to table recommendation_config",
                "operationId": "955fb9f69169335389f3b82c3516bb2f",
                "parameters": [
                    {
                        "name": "files",
                        "in": "query",
                        "description": "upload the file name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "recommendation_config.csv"
                        }
                    },
                    {
                        "name": "uploaded_by",
                        "in": "query",
                        "description": "log on user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "hua"
                        }
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "user comments",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "hua"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return upload success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/recommendation-configs": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "Get the top10 recommendation rule files",
                "operationId": "dc36b1442f8c948eb454849a839700c9",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "number of recommendation_config, default for 10",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "10"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get the recommendation result list",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/recommendation-config/{rc_id}": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "Download the recommendation config files by id",
                "operationId": "615591101845121c67f16aa7b9a70249",
                "parameters": [
                    {
                        "name": "rc_id",
                        "in": "path",
                        "description": "the id for this file",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Download the recommendation config",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/rcd_result": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "add a recommendation result",
                "operationId": "b56c8f28f6aae38e3fd2b625da80f3df",
                "parameters": [
                    {
                        "name": "f_id",
                        "in": "query",
                        "description": "the tlsconnect f_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "agent",
                        "in": "query",
                        "description": "the agent who operate this record",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "test.test"
                        }
                    },
                    {
                        "name": "sku",
                        "in": "query",
                        "description": "the sku accepted or denied",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "COURIER"
                        }
                    },
                    {
                        "name": "result",
                        "in": "query",
                        "description": "the recommendation result, accept or deny",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "accept"
                        }
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "the recommendation result comment",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "I do not need"
                        }
                    },
                    {
                        "name": "issuer",
                        "in": "query",
                        "description": "the recommendation result issuer",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ruMOW2uk"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "the recommendation result price",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "10.00"
                        }
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "the recommendation result currency",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "service_script",
                        "in": "query",
                        "description": "the recommendation result service script",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create a recommendation result record success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/rcd_result/{f_id}": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "get the recommendation result according to f_id",
                "operationId": "35a08b0716b6192144edfadbc2b90937",
                "parameters": [
                    {
                        "name": "f_id",
                        "in": "path",
                        "description": "the tlsconnect f_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get the recommendation result list",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/rcd_result/{rcd_id}": {
            "delete": {
                "tags": [
                    "Payment API"
                ],
                "description": "delete the recommendation results according to rcd_id",
                "operationId": "f11e25101967a354e14903541a51ad4c",
                "parameters": [
                    {
                        "name": "rcd_id",
                        "in": "path",
                        "description": "the recommendation result id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "rr_deleted_by",
                        "in": "query",
                        "description": "the agent who delete this record",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "test.test"
                        }
                    },
                    {
                        "name": "is_soft_delete",
                        "in": "query",
                        "description": "soft delete this record or not, yes(for soft delte) or no",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "yes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleted the record",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/rcd_rule": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "get the recommendation services by rule engine",
                "operationId": "6f400200555896d2c06f800707f51e61",
                "parameters": [
                    {
                        "name": "issuer",
                        "in": "query",
                        "description": "issuer code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "esMAD2uk"
                        }
                    },
                    {
                        "name": "visa_type",
                        "in": "query",
                        "description": "applicant's visa type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "short_stay"
                        }
                    },
                    {
                        "name": "travel_purpose",
                        "in": "query",
                        "description": "applicant's travel purpose",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "business"
                        }
                    },
                    {
                        "name": "age",
                        "in": "query",
                        "description": "applicant's age",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "6"
                        }
                    },
                    {
                        "name": "nationality",
                        "in": "query",
                        "description": "applicant's nationality code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "cn"
                        }
                    },
                    {
                        "name": "account_type",
                        "in": "query",
                        "description": "applicant's account type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "INDI"
                        }
                    },
                    {
                        "name": "step",
                        "in": "query",
                        "description": "the tlsconnect f_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10001"
                        }
                    },
                    {
                        "name": "visa_sub_type",
                        "in": "query",
                        "description": "applicant's sub visa type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "ext"
                        }
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "description": "number of recommended services",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "6"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return the recommended services",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/refund": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "create a new refund request",
                "operationId": "2cb41394b31d9c58ad95db0fd38babd1",
                "responses": {
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/transaction_items_and_refunds/{ti_xref_f_id}": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": " Get all Refund Transaction Items",
                "operationId": "24ff0f241df8ffda0d9313971d558adc",
                "parameters": [
                    {
                        "name": "ti_xref_f_id",
                        "in": "path",
                        "description": "Form ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/switch/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from switch",
                "operationId": "207fd93665078c294525cbf83c028e91",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/switch/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "operationId": "0d74af298379bf8a1d6b6636a2d69680",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/switch/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from switch",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/tingg/redirto": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "operationId": "cf90f9c0cf5824b5d0d505c45217da9d",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/tingg/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/tingg/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "operationId": "e264337105fc6b26f4a5ae16dae9ff7c",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/transaction/{fg_id}": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "get the transaction details according to fg_id",
                "operationId": "d218fd8352206dbbbd39b0a778558d30",
                "parameters": [
                    {
                        "name": "fg_id",
                        "in": "path",
                        "description": "the tlsconnect fg_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "desc or asc",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get the transaction information",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    },
                    "404": {
                        "description": "transaction not found"
                    }
                }
            }
        },
        "/api/v1/form_transaction/{f_id}": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "get the transaction details according to f_id",
                "operationId": "82a61ec3788de6b05be2880aaa33c4f6",
                "parameters": [
                    {
                        "name": "f_id",
                        "in": "path",
                        "description": "the tlsconnect f_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "desc or asc",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get the transaction information",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    },
                    "404": {
                        "description": "transaction not found"
                    }
                }
            }
        },
        "/api/v1/transaction": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "create a new transaction",
                "operationId": "1e5d79344831342dc54e615e9136c1b3",
                "parameters": [
                    {
                        "name": "fg_id",
                        "in": "query",
                        "description": "tlsconnect fg_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    },
                    {
                        "name": "client",
                        "in": "query",
                        "description": "the client id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "be"
                        }
                    },
                    {
                        "name": "issuer",
                        "in": "query",
                        "description": "the issuer tab",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "dzALG2be"
                        }
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "the payment currency for this transaction",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "MAD"
                        }
                    },
                    {
                        "name": "redirect_url",
                        "in": "query",
                        "description": "the tlsconnect website redirection url",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "onSuccess_tlsweb_url?lang=fr-fr"
                        }
                    },
                    {
                        "name": "onerror_url",
                        "in": "query",
                        "description": "the tlsconnect website error url",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "onError_tlsweb_url?lang=fr-fr"
                        }
                    },
                    {
                        "name": "reminder_url",
                        "in": "query",
                        "description": "the tlsconnect website reminder url",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "callback_to_send_reminder?lang=fr-fr"
                        }
                    },
                    {
                        "name": "callback_url",
                        "in": "query",
                        "description": "the tlsconnect website callback url",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "receipt_url/{fg_id}?lang=fr-fr"
                        }
                    },
                    {
                        "name": "workflow",
                        "in": "query",
                        "description": "workflow",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "postal"
                        }
                    },
                    {
                        "name": "payment_method",
                        "in": "query",
                        "description": "tls agent payment method",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "card"
                        }
                    },
                    {
                        "name": "t_expiration",
                        "in": "query",
                        "description": "tls citizen appointment time(min)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "30"
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "transaction items. ",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/transactions": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "get all transactions",
                "operationId": "d19fe52c210336d1a4f815d46ab9cc82",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page, default 1",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "number of result per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "20"
                        }
                    },
                    {
                        "name": "issuer",
                        "in": "query",
                        "description": "define which issuer you want to fetch",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "egCAI2be,egCAI2be"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start date",
                        "required": false,
                        "schema": {
                            "type": "date",
                            "example": "2021-01-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end date",
                        "required": false,
                        "schema": {
                            "type": "date",
                            "example": "2021-12-31"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "transaction stats, eg pending, waiting, close, done",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "pending"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get the transaction",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/list_transactions": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "get all transactions for Accounting Journal",
                "operationId": "fbd6ee7ea6371dd1c466fc666d344c0e",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page, default 1",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "number of result per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "20"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start date",
                        "required": false,
                        "schema": {
                            "type": "date",
                            "example": "2022-01-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end date",
                        "required": false,
                        "schema": {
                            "type": "date",
                            "example": "2022-12-31"
                        }
                    },
                    {
                        "name": "csv",
                        "in": "query",
                        "description": "CSV download (0 or 1)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "0"
                        }
                    },
                    {
                        "name": "multi_search[t_country]",
                        "in": "query",
                        "description": "search country",
                        "required": false,
                        "schema": {
                            "example": "gb"
                        }
                    },
                    {
                        "name": "multi_search[t_city]",
                        "in": "query",
                        "description": "search city",
                        "required": false,
                        "schema": {
                            "example": "LON"
                        }
                    },
                    {
                        "name": "multi_search[ti_fee_type]",
                        "in": "query",
                        "description": "search fee type",
                        "required": false,
                        "schema": {
                            "example": "service"
                        }
                    },
                    {
                        "name": "multi_search[t_reference_id]",
                        "in": "query",
                        "description": "search reference id",
                        "required": false,
                        "schema": {
                            "example": "GWP123456"
                        }
                    },
                    {
                        "name": "multi_search[t_comment]",
                        "in": "query",
                        "description": "search comment",
                        "required": false,
                        "schema": {
                            "example": "test"
                        }
                    },
                    {
                        "name": "multi_search[t_xref_fg_id]",
                        "in": "query",
                        "description": "search group id",
                        "required": false,
                        "schema": {
                            "example": "123"
                        }
                    },
                    {
                        "name": "multi_search[t_client]",
                        "in": "query",
                        "description": "search client",
                        "required": false,
                        "schema": {
                            "example": "de"
                        }
                    },
                    {
                        "name": "multi_search[t_batch_id]",
                        "in": "query",
                        "description": "search batch id",
                        "required": false,
                        "schema": {
                            "example": "B123"
                        }
                    },
                    {
                        "name": "multi_search[ti_quantity]",
                        "in": "query",
                        "description": "search quantity",
                        "required": false,
                        "schema": {
                            "example": "B123"
                        }
                    },
                    {
                        "name": "order_field",
                        "in": "query",
                        "description": "sort order field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "t_xref_fg_id"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "desc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get the transaction",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/yookassa/redirto": {
            "get": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from globaliris",
                "operationId": "b21f7ee80bc871070a1a82891b19f046",
                "parameters": [
                    {
                        "name": "t_id",
                        "in": "query",
                        "description": "transaction id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "10000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/yookassa/notify": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paygate",
                "operationId": "3e5fe19706581337859bf4bdda72ef34",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        },
        "/api/v1/yookassa/return": {
            "post": {
                "tags": [
                    "Payment API"
                ],
                "description": "return reqeust from paysoft",
                "responses": {
                    "200": {
                        "description": "transaction created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: bad request"
                    }
                }
            }
        }
    }
}